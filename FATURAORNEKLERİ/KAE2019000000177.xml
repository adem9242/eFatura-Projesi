<Invoice xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2" xsi:schemaLocation="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2 ..\xsd\maindoc\UBL-Invoice-2.1.xsd" xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:xades="http://uri.etsi.org/01903/v1.3.2#" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><ext:UBLExtensions><ext:UBLExtension><ext:ExtensionContent /></ext:UBLExtension></ext:UBLExtensions><cbc:UBLVersionID>2.1</cbc:UBLVersionID><cbc:CustomizationID>TR1.2</cbc:CustomizationID><cbc:ProfileID>EARSIVFATURA</cbc:ProfileID><cbc:ID>KAE2019000000177</cbc:ID><cbc:CopyIndicator>false</cbc:CopyIndicator><cbc:UUID>acd8c8ae-6201-4d0a-9ef9-53212bf989c0</cbc:UUID><cbc:IssueDate>2019-01-04</cbc:IssueDate><cbc:IssueTime>10:57:08</cbc:IssueTime><cbc:InvoiceTypeCode>SATIS</cbc:InvoiceTypeCode><cbc:Note>#N#TOPLAM_HAM_TUTAR#48.67</cbc:Note><cbc:Note>#N#GENEL_TOPLAMA_CUR#57.43</cbc:Note><cbc:Note>#N#TOPLAM_KDV_TUTARI_CUR#8.76</cbc:Note><cbc:Note>#N#GENEL_TOPLAM_CUR#57.43</cbc:Note><cbc:Note>Sicil No: 22861</cbc:Note><cbc:Note>Mersis No: 0524015764900014</cbc:Note><cbc:Note>İşletme Merkezi: KAYSERİ</cbc:Note><cbc:Note>YAZI İLE: ElliYedi TL KırkÜç Kuruş</cbc:Note><cbc:Note>Only: Ten USD And Fifty Cent</cbc:Note><cbc:Note>Fatura USD Tutarı 10.5</cbc:Note><cbc:Note>Kur Bilgisi: USD Kuru: 5,4686</cbc:Note><cbc:Note>Bu satış internet üzerinden yapılmıştır.</cbc:Note><cbc:Note>Web Sitesi: www.bayikare.com</cbc:Note><cbc:Note>Ödeme Tipi: DIGER - Vadeli Satış</cbc:Note><cbc:Note>Ödeme Tarihi: 2019-01-25</cbc:Note><cbc:Note>Gönderiyi Taşıyan: KARE BİLGİSAYAR SANAYİ VE TİCARET A.Ş.</cbc:Note><cbc:Note>Gönderiyi Taşıyan VergiNo : VKN:5240157649</cbc:Note><cbc:Note>e-Arşiv izni kapsamında elektronik ortamda iletilmiştir.</cbc:Note><cbc:DocumentCurrencyCode>USD</cbc:DocumentCurrencyCode><cbc:LineCountNumeric>1</cbc:LineCountNumeric><cac:OrderReference><cbc:ID>369768</cbc:ID><cbc:IssueDate>2019-01-04</cbc:IssueDate></cac:OrderReference><cac:AdditionalDocumentReference><cbc:ID>c22e92e4-d1aa-4348-886b-dcad0eee7c79</cbc:ID><cbc:IssueDate>2019-01-04</cbc:IssueDate><cac:Attachment><cbc:EmbeddedDocumentBinaryObject characterSetCode="UTF-8" encodingCode="Base64" filename="KAE2019000000177.xslt" mimeCode="application/xml"></cbc:EmbeddedDocumentBinaryObject></cac:Attachment></cac:AdditionalDocumentReference><cac:Signature><cbc:ID schemeID="VKN_TCKN">5240157649</cbc:ID><cac:SignatoryParty><cac:PartyIdentification><cbc:ID schemeID="VKN">5240157649</cbc:ID></cac:PartyIdentification><cac:PartyName><cbc:Name>KARE BİLGİSAYAR SANAYİ VE TİCARET A.Ş.</cbc:Name></cac:PartyName><cac:PostalAddress><cbc:StreetName>GEVHER NESİBE MAH. ATATÜRK BULV.NO:50 / A</cbc:StreetName><cbc:CitySubdivisionName>KOCASİNAN</cbc:CitySubdivisionName><cbc:CityName>KAYSERİ</cbc:CityName><cbc:PostalZone>38010</cbc:PostalZone><cac:Country><cbc:Name>TÜRKİYE</cbc:Name></cac:Country></cac:PostalAddress><cac:PartyTaxScheme><cac:TaxScheme><cbc:Name>GEVHER NESİBE</cbc:Name></cac:TaxScheme></cac:PartyTaxScheme><cac:Contact><cbc:Telephone>(352)2206464</cbc:Telephone></cac:Contact></cac:SignatoryParty><cac:DigitalSignatureAttachment><cac:ExternalReference><cbc:URI>#SIGNATURE_KAE2019000000177</cbc:URI></cac:ExternalReference></cac:DigitalSignatureAttachment></cac:Signature><cac:AccountingSupplierParty><cac:Party><cbc:WebsiteURI>www.kare.com.tr</cbc:WebsiteURI><cac:PartyIdentification><cbc:ID schemeID="VKN">5240157649</cbc:ID></cac:PartyIdentification><cac:PartyName><cbc:Name>KARE BİLGİSAYAR SANAYİ VE TİCARET A.Ş.</cbc:Name></cac:PartyName><cac:PostalAddress><cbc:StreetName>GEVHER NESİBE MAH. ATATÜRK BULV.NO:50 / A</cbc:StreetName><cbc:CitySubdivisionName>KOCASİNAN</cbc:CitySubdivisionName><cbc:CityName>KAYSERİ</cbc:CityName><cbc:PostalZone>38010</cbc:PostalZone><cac:Country><cbc:Name>TÜRKİYE</cbc:Name></cac:Country></cac:PostalAddress><cac:PartyTaxScheme><cac:TaxScheme><cbc:Name>GEVHER NESİBE</cbc:Name></cac:TaxScheme></cac:PartyTaxScheme><cac:Contact><cbc:Telephone>(352)2206464</cbc:Telephone><cbc:ElectronicMail>muhasebe@kare.com.tr</cbc:ElectronicMail></cac:Contact></cac:Party></cac:AccountingSupplierParty><cac:AccountingCustomerParty><cac:Party><cac:PartyIdentification><cbc:ID schemeID="TCKN">18353405144</cbc:ID></cac:PartyIdentification><cac:PostalAddress><cbc:StreetName>Hacısaki Mah. Atatürk Bulv. Bahar Apt.No:1</cbc:StreetName><cbc:CitySubdivisionName>KOCASİNAN</cbc:CitySubdivisionName><cbc:CityName>KAYSERİ</cbc:CityName><cbc:PostalZone>38050</cbc:PostalZone><cac:Country><cbc:Name>TÜRKİYE</cbc:Name></cac:Country></cac:PostalAddress><cac:PartyTaxScheme><cac:TaxScheme><cbc:Name>MİMARSİNAN</cbc:Name></cac:TaxScheme></cac:PartyTaxScheme><cac:Contact><cbc:Telephone>352320 73 91</cbc:Telephone><cbc:ElectronicMail>safa_bilisim@hotmail.com</cbc:ElectronicMail></cac:Contact><cac:Person><cbc:FirstName> SAFA BİLİŞİM BİLG.VE GÜVENLİK SİS.(SALİH</cbc:FirstName><cbc:FamilyName>KOCAMAZ)</cbc:FamilyName></cac:Person></cac:Party></cac:AccountingCustomerParty><cac:PaymentMeans><cbc:PaymentMeansCode>ZZZ</cbc:PaymentMeansCode><cbc:PaymentDueDate>2019-01-25</cbc:PaymentDueDate><cbc:InstructionNote>VADE TARİHİ: 2019-01-25</cbc:InstructionNote></cac:PaymentMeans><cac:PricingExchangeRate><cbc:SourceCurrencyCode>USD</cbc:SourceCurrencyCode><cbc:TargetCurrencyCode>TRY</cbc:TargetCurrencyCode><cbc:CalculationRate>5.4686</cbc:CalculationRate><cbc:Date>2019-01-04</cbc:Date></cac:PricingExchangeRate><cac:TaxTotal><cbc:TaxAmount currencyID="USD">1.6</cbc:TaxAmount><cac:TaxSubtotal><cbc:TaxableAmount currencyID="USD">8.9</cbc:TaxableAmount><cbc:TaxAmount currencyID="USD">1.6</cbc:TaxAmount><cbc:Percent>18</cbc:Percent><cac:TaxCategory><cac:TaxScheme><cbc:Name>KDV</cbc:Name><cbc:TaxTypeCode>0015</cbc:TaxTypeCode></cac:TaxScheme></cac:TaxCategory></cac:TaxSubtotal></cac:TaxTotal><cac:LegalMonetaryTotal><cbc:LineExtensionAmount currencyID="USD">8.9</cbc:LineExtensionAmount><cbc:TaxExclusiveAmount currencyID="USD">8.9</cbc:TaxExclusiveAmount><cbc:TaxInclusiveAmount currencyID="USD">10.5</cbc:TaxInclusiveAmount><cbc:AllowanceTotalAmount currencyID="USD">0</cbc:AllowanceTotalAmount><cbc:PayableAmount currencyID="USD">10.5</cbc:PayableAmount></cac:LegalMonetaryTotal><cac:InvoiceLine><cbc:ID>1</cbc:ID><cbc:Note></cbc:Note><cbc:InvoicedQuantity unitCode="NIU">1</cbc:InvoicedQuantity><cbc:LineExtensionAmount currencyID="USD">8.9</cbc:LineExtensionAmount><cac:TaxTotal><cbc:TaxAmount currencyID="USD">1.6</cbc:TaxAmount><cac:TaxSubtotal><cbc:TaxableAmount currencyID="USD">8.9</cbc:TaxableAmount><cbc:TaxAmount currencyID="USD">1.6</cbc:TaxAmount><cbc:Percent>18</cbc:Percent><cac:TaxCategory><cac:TaxScheme><cbc:Name>KDV</cbc:Name><cbc:TaxTypeCode>0015</cbc:TaxTypeCode></cac:TaxScheme></cac:TaxCategory></cac:TaxSubtotal></cac:TaxTotal><cac:Item><cbc:Name>LOGITECH M170 GRİ KABLOSUZ MOUSE </cbc:Name><cac:BuyersItemIdentification><cbc:ID></cbc:ID></cac:BuyersItemIdentification><cac:SellersItemIdentification><cbc:ID>910-004642</cbc:ID></cac:SellersItemIdentification><cac:ManufacturersItemIdentification><cbc:ID></cbc:ID></cac:ManufacturersItemIdentification></cac:Item><cac:Price><cbc:PriceAmount currencyID="USD">8.9</cbc:PriceAmount></cac:Price></cac:InvoiceLine></Invoice>